imformation testing

7) http://gaia.cs.umass.edu

10) host gaia.cs.umass.edu

11) host 128.119.245.12

14) src host 128.119.245.12

15) sdt host 128.119.245.12

17) not host 128.119.245.12



12)ans= ครั้งเเรกได้ 20 ครั้ง  ครั้งที่ 2 ได้ 35 ครั้ง มีค่า Source เเละที่ Destination ที่ต่างกัน

13)ans= หมายเลขข้องผู้ส่งข้อมูล  , หมายเลขของผู้รับข้อมูล

16)ans= ครั้งเเรกได้  11 ครั้ง  ครั้งที่ 2 ได้ 17 ครั้ง มีค่า Source เเละที่ Destination ที่ต่างกัน

17)ans= การดักจับข้อมูลที่ไม่ใช่  not host 128.119.245.12

18)ans= เป็นการกรองข้อมูลที่ผ่าน host นั้นเเละ capture ออกมา
19)ans= รูป

20)ans= เเสดงไฟล์ที่ capture เเละขนาด วันที่



4)ans= 30
5)ans= 25,34,240

7)ans= packet ที่ 33 f= 22,240,1860  การส่งข้อมูลเเละรอจนกว่าจะได้ข้อมูลตอบกลับ
8)ans= 8 response Code 12





ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=TH
network={       
	scan_ssid=1
	ssid="First1058Mobile"
	psk="First1984" 
	proto=RSN
	key_mgmt=WPA2-PSK
	pairwise=CCMP
	auth_alg=OPEN
}


ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
country=TH
update_config=1
network={ 
	ssid="bbbbb"  
	psk="00000000" 
} 



4-2
@lab 4 ข้อ 2
.global _start

_start:

    MOV r7, #3
    MOV r0, #0
    MOV r2, #20
    LDR r1, =input_one
    SWI 0

    MOV r7, #3
    MOV r0, #0
    MOV r2, #20
    LDR r1, =input_two
    SWI 0

    LDR r1, =input_one
    LDR r2, =input_two

    MOV r3, #0

_len_one:

    LDRB r4, [r1,r3]
    CMP r4, #10
    ADD r3,r3,#1
    BNE _len_one

    MOV r5, #0

_len_two:

    LDRB r4, [r2,r5]
    CMP r4, #10
    ADD r5,r5,#1
    BNE _len_two

    MOV r4, #0
    MOV r6, #0

    SUB r3,r3,#1
    SUB r5,r5,#1

_loop_range:

    CMP r4, r3
    ADD r4,r4,#1

    MOV r6, #0
    MOV r7, #0

    BLT _loop_find
    B _print_no

_loop_find:

    CMP r7, r3
    BLT _compare_word_and_key
    B _loop_range

_compare_word_and_key:

    LDRB r8, [r1,r7]
    LDRB r9, [r2,r6]

    ADD r7,r7,#1

    CMP r8,r9
    BNE _set_key_zero
    ADD r6,r6,#1

    CMP r6, r5
    BNE _loop_find
    B _print_yes

_set_key_zero:

    MOV r6, #0
    B _loop_find

_print_yes:

    MOV r7, #4
    MOV r0, #1
    MOV r2, #4
    LDR r1, =result_yes
    SWI 0
    B _exit

_print_no:

    MOV r7, #4
    MOV r0, #1
    MOV r2, #4
    LDR r1, =result_no
    SWI 0
    B _exit

_exit:

    MOV r0, R10
    MOV r7, #1
    SWI 0

    .data

input_one: .asciz "          "
input_two: .asciz "          "

result_yes: .ascii "Yes\n"
result_no: .ascii "No\n"




4-1
.global _start

_start:
    MOV R7, #3 @ ใช้ 7 เรียก 3 คือ อ่าน
    MOV R0, #1 @ ใช้ 0 กำหนดรับ 1 คือ แป้นพิมพ์
    MOV R2, #2 @ ใช้ 2 กำหนดขนาด 2 อักษร
    LDR R1, = Lab4 @ แสดง Lab4 รับค่าเก็บไว้ใน R1
    SWI 0 @ ออกจากการทำงานของ R7 แบบ 3

    LDRB R0, [R1, #0] @ ตั้งแต่ตำแหน่งที่ 0 ของ R1 เป็น Byte ไปเก็บใน R0
    LDRB R2, [R1, #1] @ เช่นเดิม
    SUB R0, R0 ,#48 @ เอาตัวเลขหลักที่แยกมาลบ 48 เก็บไว้ในตัวแปรเดิม
    SUB R2, R2, #48 @ เช่นเดิม

    MOV R10, #10 @ เก็บค่า 10 ไว้ใช้
    MUL R11, R0, R10 @ นำหลักแรกมา *10 เก็บไว้
    ADDS R9, R11, R2 @ เช่นเดิม

    MOV R11, #0 @ แทนค่า 0
    LDR R6, =Set @ กำหนดลักษณะจำนวนอักษรการแสดงผลจาก Set

loop_binary:
    MOV R10, #2 @ เก็บค่า 2 ไว้ใช้
    UDIV R12, R9, R10 @ รวมค่าใน R9 มา /2
    MUL R8, R12, R10 @ นำมา *2 ต่อ
    SUB R0, R9, R8 @ ลบปกติ

    ADD R8, R0, #'0' @ ใส่อักษร 0 เข้าไปในตัวแปร
    STR R8, [R6, R11] @ เก็บ R8 ตำแหน่งที่ R11 ไว้ใน R6
    MOV R9, R12 @ ย้ายค่า
    ADD R11, R11, #1 @ +1

    CMP R9, #0 @ หากเป็น 0
    BNE loop_binary
    MOV R3, R11 @ ย้ายค่า
    MOV R4, #0 @ แทนค่า 0
    B Set_binary

Set_binary:
    LDR R0, =Show @ กำหนดลักษณะจำนวนอักษรการแสดงผลจาก Show
    LDR R1, =Set @ กำหนดลักษณะจำนวนอักษรการแสดงผลจาก Set

    LDRB R5, [R1, R3] @ นำค่าตำแหน่ง R3 ของ R1 ไปที่ R5
    STR R5, [R0, R4] @ นำค่าตำแหน่ง R4 ของ R5 ไปที่ R0

    CMP R3, #0 @ หากเป็น 0
    ADD R4, R4, #1 @ +1
    SUB R3, R3, #1 @ +1
    BNE Set_binary @ หากยังไม่เท่ากันไปทำใหม่
    B Exit

Exit:

_show:
    MOV R7, #4 @ ใช้ 7 เรียก 4 คือ แสดงผล
    MOV R0, #2 @ ใช้ 0 กำหนดแสดง 2 คือ หน้าจอ
    MOV R2, #9 @ ใช้ 2 กำหนดขนาด 9 อักษร
    LDR R1, =Show @ กำหนดการแสดงผลแบบ Show
    SWI 0 @ ออกจาก R7 แบบ 4

_exit:
    MOV R7, #1 @ ใช้ 7 เรียก 1 คือ ปิดการทำงาน
    SWI 0 @ ออกจาก R7 แบบ 1

    .data
Lab4: .ascii " "
Set: .ascii "0000000"
Show: .ascii "0000000 \n"
